      
version: "3.9"
services:
  db:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres  
      - POSTGRES_DB=postgres
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672" 

  django:
    build: .
    restart: always
    entrypoint: /config/docker/django_entrypoint.sh
    depends_on:
      - db
      - rabbitmq
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - DJANGO_SETTINGS_MODULE=config.settings 
    ports:
      - "8000:8000"
    volumes:
      - .:/config
      - static_volume:/static
      - media_volume:/media
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  celery:
    build: .
    restart: always
    depends_on:
      - db
      - rabbitmq
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - DJANGO_SETTINGS_MODULE=config.settings 
    volumes:
      - .:/config
    command: celery -A config worker -l info

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 1337:80
    volumes:
      - static_volume:/static
      - media_volume:/media
    depends_on:
      - django

volumes:
  db_data:
  static_volume:
  media_volume: